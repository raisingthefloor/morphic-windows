//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.0.1.221115.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace SystemSettings.DataModel
{
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("40C037CC-D8BF-489E-8697-D66BAA3221BF")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingItem))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingItem
    {
        object GetValue(string name);
        void SetValue(string name, object pValue);
        object GetProperty(string name);
        void SetProperty(string name, object pValue);
        void Invoke(global::Windows.UI.Core.CoreWindow window, global::Windows.Foundation.Rect rect);
        string Description { get; }
        string Id { get; }
        bool IsApplicable { get; }
        bool IsEnabled { get; }
        bool IsSetByGroupPolicy { get; }
        bool IsUpdating { get; }
        SettingType Type { get; }
        event global::Windows.Foundation.TypedEventHandler<object, string> SettingChanged;
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("32572999-399D-40FF-A423-3595B4DC993B")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingItem2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingItem2 : ISettingItem
    {
        object GetValueForUser(string userSid, string name);
        void SetValueForUser(string userSid, string name, object pValue);
        bool GetIsEnabledForUser(string userSid);
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("7CF1E617-FE1E-48EF-8962-40A425D21D7E")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingItemTelemetry))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingItemTelemetry
    {
        void SetPageSessionId(Guid pageContext);
        Guid PageSessionId { get; }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("DFF43DDC-7D1D-4899-94C5-A2A06E177712")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsAppNotification))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingsAppNotification
    {
        void OnSettingsAppSuspending();
        void OnSettingsAppResuming();
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("07353932-5353-4DF4-94A3-E45D56087018")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsBroker))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    internal interface ISettingsBroker
    {
        void GetSettingsDatabase(out object ppSettingsDatabase);
        void GetSystemSettingsDatabase(out object ppSettingsDatabase);
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("D68A97B7-4F47-4CB6-9E1F-A01C1232F755")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsDatabase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingsDatabase
    {
        ISettingItem GetSetting(string id);
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("0E5C179B-5A3A-4402-AE23-C13F76CD76AD")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsDatabaseForUser))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingsDatabaseForUser
    {
        ISettingItem GetSettingForUser(global::Windows.System.User user, string id);
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("ACBE964B-0EED-4D11-9CA9-FDEB63598D2E")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingsEnvironmentDatabase
    {
        void IsSettingApplicable(string id, out bool pValue);
        void IsSettingAccessible(string id, out bool pValue);
        void IsSettingTextDynamic(string id, out bool pValue);
        void IsSettingGlyphDynamic(string id, out bool pValue);
        event SettingsEnvironmentChangedHandler SettingsEnvironmentChanged;
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("FAEDFC6B-CB6B-4533-843C-4F394BFD66D5")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingsEnvironmentDatabaseStatics
    {
        object GetSettingsEnvironment();
        object GetSettingsEnvironmentForUser(global::Windows.System.User user);
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("3046D46B-0C7C-44D6-B7B5-1EABA8A4FDDC")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsExtensibility))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    internal interface ISettingsExtensibility
    {
        global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<SettingsExtensionApp>> GetExtensionAppsAsync();
        global::Windows.Foundation.IAsyncOperation<bool> AnyInstalledCategoryAppsAsync();
        global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<SettingsExtensionApp>> GetExtensionAppsForPageAsync(global::System.Collections.Generic.IEnumerable<string> pageUris);
        global::Windows.Foundation.IAsyncOperation<bool> CheckIfInstalledExtensionAppsChangedAsync();
        global::Windows.Foundation.IAsyncAction SnapshotInstalledExtensionAppsAsync();
        string Revision { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("1BEB1731-DDC4-437B-B856-C0666EE19B48")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsExtensionApp))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    internal interface ISettingsExtensionApp
    {
        global::System.Collections.Generic.IReadOnlyList<SettingsExtensionAppLink> AppLinks { get; }
        string AssociatedPageUri { get; }
        string Aumid { get; }
        string DisplayName { get; }
        global::System.Collections.Generic.IReadOnlyList<string> SearchTerms { get; }
        string SettingCategory { get; }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("DDFC4C13-1DA0-48B4-AFE6-0248289227A6")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsExtensionAppLink))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    internal interface ISettingsExtensionAppLink
    {
        void ActivateApp();
        string ActivationParameters { get; }
        string Aumid { get; }
        string DisplayName { get; }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("5B1BEE31-CD2E-47C8-A7EE-A92156147C35")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsSearchContentFeatureControl))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    internal interface ISettingsSearchContentFeatureControl
    {
        void GetIsSearchFeatureEnabled(string featureId, out bool value);
        uint FeatureStateDigest { get; }
        uint FeatureStateRevision { get; }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("5D23CF08-65BD-4DB1-9098-D45F26F11085")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsSearchDatabase))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    internal interface ISettingsSearchDatabase
    {
        global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetSearchDatabaseAsync();
        string GetServiceDrivenSearchData();
        string DatabasePath { get; }
        ulong DatabaseRevision { get; }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("2E4F139A-9631-4E42-BF4E-C79DBCB77729")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsSearchDatabase2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingsSearchDatabase2
    {
        string GetServiceDrivenSearchNestedData();
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("FE77309C-5A00-4A55-BE49-5B919EEA47BC")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.ISettingsSearchDatabaseExtension))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface ISettingsSearchDatabaseExtension
    {
        string GetServiceDrivenSearchData(bool nestedProperties);
        ulong DatabaseRevision { get; }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [Guid("8E25841A-9AF4-44C3-9F53-D68AC9461139")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.IValueChangedCallback))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public interface IValueChangedCallback
    {
        void OnValueChanged(string name);
    }
    [global::Windows.Foundation.Metadata.ContractVersion(65536u)]
    public enum InternalContract
    {
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public enum SettingType : int
    {
        Plugin = unchecked((int)0xffffffff),
        Custom = unchecked((int)0),
        DisplayString = unchecked((int)0x1),
        LabeledString = unchecked((int)0x2),
        Boolean = unchecked((int)0x3),
        Range = unchecked((int)0x4),
        String = unchecked((int)0x5),
        List = unchecked((int)0x6),
        Action = unchecked((int)0x7),
        SettingCollection = unchecked((int)0x8),
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsBroker))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsBroker))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsBroker : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsBroker>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsBroker => _inner;
        private ISettingsBroker _default => null;

        public SettingsBroker() : this((ActivationFactory<SettingsBroker>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static SettingsBroker FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsBroker>.FromAbi(thisPtr);
        }

        internal SettingsBroker(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsBroker).GetHelperType()));

        }

        public static bool operator ==(SettingsBroker x, SettingsBroker y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsBroker x, SettingsBroker y) => !(x == y);
        public bool Equals(SettingsBroker other) => this == other;
        public override bool Equals(object obj) => obj is SettingsBroker that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public void GetSettingsDatabase(out object ppSettingsDatabase) => global::ABI.SystemSettings.DataModel.ISettingsBrokerMethods.GetSettingsDatabase(_objRef_global__SystemSettings_DataModel_ISettingsBroker, out ppSettingsDatabase);

        public void GetSystemSettingsDatabase(out object ppSettingsDatabase) => global::ABI.SystemSettings.DataModel.ISettingsBrokerMethods.GetSystemSettingsDatabase(_objRef_global__SystemSettings_DataModel_ISettingsBroker, out ppSettingsDatabase);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsDatabase))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsDatabase))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsDatabase : ISettingsDatabase, ISettingsDatabaseForUser, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsDatabase>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsDatabase => _inner;
        private volatile IObjectReference ___objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser;
        private IObjectReference Make___objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(ISettingsDatabaseForUser).GetHelperType())), null);
            return ___objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser;
        }
        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser => ___objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser ?? Make___objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser();

        private ISettingsDatabase _default => null;

        public SettingsDatabase() : this((ActivationFactory<SettingsDatabase>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static SettingsDatabase FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsDatabase>.FromAbi(thisPtr);
        }

        internal SettingsDatabase(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsDatabase).GetHelperType()));

        }

        public static bool operator ==(SettingsDatabase x, SettingsDatabase y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsDatabase x, SettingsDatabase y) => !(x == y);
        public bool Equals(SettingsDatabase other) => this == other;
        public override bool Equals(object obj) => obj is SettingsDatabase that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public ISettingItem GetSetting(string id) => global::ABI.SystemSettings.DataModel.ISettingsDatabaseMethods.GetSetting(_objRef_global__SystemSettings_DataModel_ISettingsDatabase, id);

        ISettingItem ISettingsDatabase.GetSetting(string id) => GetSetting(id);
        public ISettingItem GetSettingForUser(global::Windows.System.User user, string id) => global::ABI.SystemSettings.DataModel.ISettingsDatabaseForUserMethods.GetSettingForUser(_objRef_global__SystemSettings_DataModel_ISettingsDatabaseForUser, user, id);

        ISettingItem ISettingsDatabaseForUser.GetSettingForUser(global::Windows.System.User user, string id) => GetSettingForUser(user, id);
        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsEnvironment))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsEnvironmentDatabase))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsEnvironment : ISettingsEnvironmentDatabase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsEnvironment>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase => _inner;
        private ISettingsEnvironmentDatabase _default => null;

        public static I As<I>() => ActivationFactory<SettingsEnvironment>.AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics;
        private static IObjectReference Make___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics, ActivationFactory<SettingsEnvironment>.As(GuidGenerator.GetIID(typeof(ISettingsEnvironmentDatabaseStatics).GetHelperType())), null);
            return ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics;
        }
        private static IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics => ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics ?? Make___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics();



        public static object GetSettingsEnvironment() => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseStaticsMethods.GetSettingsEnvironment(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics);

        public static object GetSettingsEnvironmentForUser(global::Windows.System.User user) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseStaticsMethods.GetSettingsEnvironmentForUser(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics, user);

        public static SettingsEnvironment FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsEnvironment>.FromAbi(thisPtr);
        }

        internal SettingsEnvironment(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsEnvironmentDatabase).GetHelperType()));

        }

        public static bool operator ==(SettingsEnvironment x, SettingsEnvironment y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsEnvironment x, SettingsEnvironment y) => !(x == y);
        public bool Equals(SettingsEnvironment other) => this == other;
        public override bool Equals(object obj) => obj is SettingsEnvironment that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public void IsSettingApplicable(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingApplicable(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingApplicable(string id, out bool pValue) => IsSettingApplicable(id, out pValue);
        public void IsSettingAccessible(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingAccessible(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingAccessible(string id, out bool pValue) => IsSettingAccessible(id, out pValue);
        public void IsSettingTextDynamic(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingTextDynamic(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingTextDynamic(string id, out bool pValue) => IsSettingTextDynamic(id, out pValue);
        public void IsSettingGlyphDynamic(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingGlyphDynamic(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingGlyphDynamic(string id, out bool pValue) => IsSettingGlyphDynamic(id, out pValue);
        public event SettingsEnvironmentChangedHandler SettingsEnvironmentChanged
        {
            add => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, (IWinRTObject)this).Item1(value);
            remove => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, (IWinRTObject)this).Item2(value);
        }

        event SettingsEnvironmentChangedHandler ISettingsEnvironmentDatabase.SettingsEnvironmentChanged
        {
            add => this.SettingsEnvironmentChanged += value;
            remove => this.SettingsEnvironmentChanged -= value;
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsEnvironmentChangedHandler))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public delegate void SettingsEnvironmentChangedHandler(ISettingsEnvironmentDatabase sender, string variableName);
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsEnvironmentDatabase))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsEnvironmentDatabase))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsEnvironmentDatabase : ISettingsEnvironmentDatabase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsEnvironmentDatabase>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase => _inner;
        private ISettingsEnvironmentDatabase _default => null;

        public SettingsEnvironmentDatabase() : this((ActivationFactory<SettingsEnvironmentDatabase>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static I As<I>() => ActivationFactory<SettingsEnvironmentDatabase>.AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics;
        private static IObjectReference Make___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics, ActivationFactory<SettingsEnvironmentDatabase>.As(GuidGenerator.GetIID(typeof(ISettingsEnvironmentDatabaseStatics).GetHelperType())), null);
            return ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics;
        }
        private static IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics => ___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics ?? Make___objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics();



        public static object GetSettingsEnvironment() => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseStaticsMethods.GetSettingsEnvironment(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics);

        public static object GetSettingsEnvironmentForUser(global::Windows.System.User user) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseStaticsMethods.GetSettingsEnvironmentForUser(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabaseStatics, user);

        public static SettingsEnvironmentDatabase FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsEnvironmentDatabase>.FromAbi(thisPtr);
        }

        internal SettingsEnvironmentDatabase(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsEnvironmentDatabase).GetHelperType()));

        }

        public static bool operator ==(SettingsEnvironmentDatabase x, SettingsEnvironmentDatabase y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsEnvironmentDatabase x, SettingsEnvironmentDatabase y) => !(x == y);
        public bool Equals(SettingsEnvironmentDatabase other) => this == other;
        public override bool Equals(object obj) => obj is SettingsEnvironmentDatabase that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public void IsSettingApplicable(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingApplicable(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingApplicable(string id, out bool pValue) => IsSettingApplicable(id, out pValue);
        public void IsSettingAccessible(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingAccessible(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingAccessible(string id, out bool pValue) => IsSettingAccessible(id, out pValue);
        public void IsSettingTextDynamic(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingTextDynamic(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingTextDynamic(string id, out bool pValue) => IsSettingTextDynamic(id, out pValue);
        public void IsSettingGlyphDynamic(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingGlyphDynamic(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingGlyphDynamic(string id, out bool pValue) => IsSettingGlyphDynamic(id, out pValue);
        public event SettingsEnvironmentChangedHandler SettingsEnvironmentChanged
        {
            add => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, (IWinRTObject)this).Item1(value);
            remove => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, (IWinRTObject)this).Item2(value);
        }

        event SettingsEnvironmentChangedHandler ISettingsEnvironmentDatabase.SettingsEnvironmentChanged
        {
            add => this.SettingsEnvironmentChanged += value;
            remove => this.SettingsEnvironmentChanged -= value;
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsEnvironmentDatabaseServer))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsEnvironmentDatabase))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsEnvironmentDatabaseServer : ISettingsEnvironmentDatabase, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsEnvironmentDatabaseServer>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase => _inner;
        private ISettingsEnvironmentDatabase _default => null;

        public SettingsEnvironmentDatabaseServer() : this((ActivationFactory<SettingsEnvironmentDatabaseServer>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static SettingsEnvironmentDatabaseServer FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsEnvironmentDatabaseServer>.FromAbi(thisPtr);
        }

        internal SettingsEnvironmentDatabaseServer(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsEnvironmentDatabase).GetHelperType()));

        }

        public static bool operator ==(SettingsEnvironmentDatabaseServer x, SettingsEnvironmentDatabaseServer y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsEnvironmentDatabaseServer x, SettingsEnvironmentDatabaseServer y) => !(x == y);
        public bool Equals(SettingsEnvironmentDatabaseServer other) => this == other;
        public override bool Equals(object obj) => obj is SettingsEnvironmentDatabaseServer that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public void IsSettingApplicable(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingApplicable(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingApplicable(string id, out bool pValue) => IsSettingApplicable(id, out pValue);
        public void IsSettingAccessible(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingAccessible(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingAccessible(string id, out bool pValue) => IsSettingAccessible(id, out pValue);
        public void IsSettingTextDynamic(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingTextDynamic(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingTextDynamic(string id, out bool pValue) => IsSettingTextDynamic(id, out pValue);
        public void IsSettingGlyphDynamic(string id, out bool pValue) => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingGlyphDynamic(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, id, out pValue);

        void ISettingsEnvironmentDatabase.IsSettingGlyphDynamic(string id, out bool pValue) => IsSettingGlyphDynamic(id, out pValue);
        public event SettingsEnvironmentChangedHandler SettingsEnvironmentChanged
        {
            add => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, (IWinRTObject)this).Item1(value);
            remove => global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_objRef_global__SystemSettings_DataModel_ISettingsEnvironmentDatabase, (IWinRTObject)this).Item2(value);
        }

        event SettingsEnvironmentChangedHandler ISettingsEnvironmentDatabase.SettingsEnvironmentChanged
        {
            add => this.SettingsEnvironmentChanged += value;
            remove => this.SettingsEnvironmentChanged -= value;
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsExtensibility))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsExtensibility))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsExtensibility : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsExtensibility>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsExtensibility => _inner;
        private ISettingsExtensibility _default => null;

        public SettingsExtensibility() : this((ActivationFactory<SettingsExtensibility>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static SettingsExtensibility FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsExtensibility>.FromAbi(thisPtr);
        }

        internal SettingsExtensibility(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsExtensibility).GetHelperType()));

        }

        public static bool operator ==(SettingsExtensibility x, SettingsExtensibility y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsExtensibility x, SettingsExtensibility y) => !(x == y);
        public bool Equals(SettingsExtensibility other) => this == other;
        public override bool Equals(object obj) => obj is SettingsExtensibility that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<SettingsExtensionApp>> GetExtensionAppsAsync() => global::ABI.SystemSettings.DataModel.ISettingsExtensibilityMethods.GetExtensionAppsAsync(_objRef_global__SystemSettings_DataModel_ISettingsExtensibility);

        public global::Windows.Foundation.IAsyncOperation<bool> AnyInstalledCategoryAppsAsync() => global::ABI.SystemSettings.DataModel.ISettingsExtensibilityMethods.AnyInstalledCategoryAppsAsync(_objRef_global__SystemSettings_DataModel_ISettingsExtensibility);

        public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<SettingsExtensionApp>> GetExtensionAppsForPageAsync(global::System.Collections.Generic.IEnumerable<string> pageUris) => global::ABI.SystemSettings.DataModel.ISettingsExtensibilityMethods.GetExtensionAppsForPageAsync(_objRef_global__SystemSettings_DataModel_ISettingsExtensibility, pageUris);

        public global::Windows.Foundation.IAsyncOperation<bool> CheckIfInstalledExtensionAppsChangedAsync() => global::ABI.SystemSettings.DataModel.ISettingsExtensibilityMethods.CheckIfInstalledExtensionAppsChangedAsync(_objRef_global__SystemSettings_DataModel_ISettingsExtensibility);

        public global::Windows.Foundation.IAsyncAction SnapshotInstalledExtensionAppsAsync() => global::ABI.SystemSettings.DataModel.ISettingsExtensibilityMethods.SnapshotInstalledExtensionAppsAsync(_objRef_global__SystemSettings_DataModel_ISettingsExtensibility);

        public string Revision
        {
            get => global::ABI.SystemSettings.DataModel.ISettingsExtensibilityMethods.get_Revision(_objRef_global__SystemSettings_DataModel_ISettingsExtensibility);
            set => global::ABI.SystemSettings.DataModel.ISettingsExtensibilityMethods.set_Revision(_objRef_global__SystemSettings_DataModel_ISettingsExtensibility, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsExtensionApp))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsExtensionApp))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsExtensionApp : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsExtensionApp>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsExtensionApp => _inner;
        private ISettingsExtensionApp _default => null;

        public static SettingsExtensionApp FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsExtensionApp>.FromAbi(thisPtr);
        }

        internal SettingsExtensionApp(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsExtensionApp).GetHelperType()));

        }

        public static bool operator ==(SettingsExtensionApp x, SettingsExtensionApp y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsExtensionApp x, SettingsExtensionApp y) => !(x == y);
        public bool Equals(SettingsExtensionApp other) => this == other;
        public override bool Equals(object obj) => obj is SettingsExtensionApp that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public global::System.Collections.Generic.IReadOnlyList<SettingsExtensionAppLink> AppLinks => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppMethods.get_AppLinks(_objRef_global__SystemSettings_DataModel_ISettingsExtensionApp);

        public string AssociatedPageUri => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppMethods.get_AssociatedPageUri(_objRef_global__SystemSettings_DataModel_ISettingsExtensionApp);

        public string Aumid => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppMethods.get_Aumid(_objRef_global__SystemSettings_DataModel_ISettingsExtensionApp);

        public string DisplayName => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppMethods.get_DisplayName(_objRef_global__SystemSettings_DataModel_ISettingsExtensionApp);

        public global::System.Collections.Generic.IReadOnlyList<string> SearchTerms => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppMethods.get_SearchTerms(_objRef_global__SystemSettings_DataModel_ISettingsExtensionApp);

        public string SettingCategory => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppMethods.get_SettingCategory(_objRef_global__SystemSettings_DataModel_ISettingsExtensionApp);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsExtensionAppLink))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsExtensionAppLink))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsExtensionAppLink : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsExtensionAppLink>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsExtensionAppLink => _inner;
        private ISettingsExtensionAppLink _default => null;

        public static SettingsExtensionAppLink FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsExtensionAppLink>.FromAbi(thisPtr);
        }

        internal SettingsExtensionAppLink(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsExtensionAppLink).GetHelperType()));

        }

        public static bool operator ==(SettingsExtensionAppLink x, SettingsExtensionAppLink y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsExtensionAppLink x, SettingsExtensionAppLink y) => !(x == y);
        public bool Equals(SettingsExtensionAppLink other) => this == other;
        public override bool Equals(object obj) => obj is SettingsExtensionAppLink that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public void ActivateApp() => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppLinkMethods.ActivateApp(_objRef_global__SystemSettings_DataModel_ISettingsExtensionAppLink);

        public string ActivationParameters => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppLinkMethods.get_ActivationParameters(_objRef_global__SystemSettings_DataModel_ISettingsExtensionAppLink);

        public string Aumid => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppLinkMethods.get_Aumid(_objRef_global__SystemSettings_DataModel_ISettingsExtensionAppLink);

        public string DisplayName => global::ABI.SystemSettings.DataModel.ISettingsExtensionAppLinkMethods.get_DisplayName(_objRef_global__SystemSettings_DataModel_ISettingsExtensionAppLink);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("SystemSettings.DataModel")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.SystemSettings.DataModel.SettingsSearchContentManager))]
    [global::WinRT.ProjectedRuntimeClass(typeof(ISettingsSearchContentFeatureControl))]
    [global::WinRT.ObjectReferenceWrapper(nameof(_inner))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(InternalContract), 65536u)]
    public sealed class SettingsSearchContentManager : ISettingsSearchDatabase2, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<SettingsSearchContentManager>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private IObjectReference _inner = null;



        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsSearchContentFeatureControl => _inner;
        private volatile IObjectReference ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase;
        private IObjectReference Make___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(ISettingsSearchDatabase).GetHelperType())), null);
            return ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase;
        }
        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase => ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase ?? Make___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase();

        private volatile IObjectReference ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2;
        private IObjectReference Make___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(GuidGenerator.GetIID(typeof(ISettingsSearchDatabase2).GetHelperType())), null);
            return ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2;
        }
        private IObjectReference _objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2 => ___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2 ?? Make___objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2();

        private ISettingsSearchContentFeatureControl _default => null;

        public SettingsSearchContentManager() : this((ActivationFactory<SettingsSearchContentManager>.ActivateInstance<IUnknownVftbl>()))
        {
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);
        }

        public static SettingsSearchContentManager FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<SettingsSearchContentManager>.FromAbi(thisPtr);
        }

        internal SettingsSearchContentManager(IObjectReference objRef)
        {
            _inner = objRef.As(GuidGenerator.GetIID(typeof(ISettingsSearchContentFeatureControl).GetHelperType()));

        }

        public static bool operator ==(SettingsSearchContentManager x, SettingsSearchContentManager y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(SettingsSearchContentManager x, SettingsSearchContentManager y) => !(x == y);
        public bool Equals(SettingsSearchContentManager other) => this == other;
        public override bool Equals(object obj) => obj is SettingsSearchContentManager that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I> { };


        public void GetIsSearchFeatureEnabled(string featureId, out bool value) => global::ABI.SystemSettings.DataModel.ISettingsSearchContentFeatureControlMethods.GetIsSearchFeatureEnabled(_objRef_global__SystemSettings_DataModel_ISettingsSearchContentFeatureControl, featureId, out value);

        public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetSearchDatabaseAsync() => global::ABI.SystemSettings.DataModel.ISettingsSearchDatabaseMethods.GetSearchDatabaseAsync(_objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase);

        public string GetServiceDrivenSearchData() => global::ABI.SystemSettings.DataModel.ISettingsSearchDatabaseMethods.GetServiceDrivenSearchData(_objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase);

        public string GetServiceDrivenSearchNestedData() => global::ABI.SystemSettings.DataModel.ISettingsSearchDatabase2Methods.GetServiceDrivenSearchNestedData(_objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase2);

        string ISettingsSearchDatabase2.GetServiceDrivenSearchNestedData() => GetServiceDrivenSearchNestedData();
        public string DatabasePath => global::ABI.SystemSettings.DataModel.ISettingsSearchDatabaseMethods.get_DatabasePath(_objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase);

        public ulong DatabaseRevision => global::ABI.SystemSettings.DataModel.ISettingsSearchDatabaseMethods.get_DatabaseRevision(_objRef_global__SystemSettings_DataModel_ISettingsSearchDatabase);

        public uint FeatureStateDigest => global::ABI.SystemSettings.DataModel.ISettingsSearchContentFeatureControlMethods.get_FeatureStateDigest(_objRef_global__SystemSettings_DataModel_ISettingsSearchContentFeatureControl);

        public uint FeatureStateRevision => global::ABI.SystemSettings.DataModel.ISettingsSearchContentFeatureControlMethods.get_FeatureStateRevision(_objRef_global__SystemSettings_DataModel_ISettingsSearchContentFeatureControl);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.InterfaceIIDs.IInspectable_IID == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.SystemSettings.DataModel
{
    public static class ISettingItemMethods
    {

        public static unsafe object GetValue(IObjectReference _obj, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __name = new(name);
                fixed (void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalString.GetAbi(ref __name), out __retval));
                    return MarshalInspectable<object>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        public static unsafe void SetValue(IObjectReference _obj, string name, object pValue)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __pValue = default;
            try
            {
                __pValue = MarshalInspectable<object>.CreateMarshaler2(pValue);
                MarshalString.Pinnable __name = new(name);
                fixed (void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __name), MarshalInspectable<object>.GetAbi(__pValue)));
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__pValue);
            }
        }

        public static unsafe object GetProperty(IObjectReference _obj, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __name = new(name);
                fixed (void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[15](ThisPtr, MarshalString.GetAbi(ref __name), out __retval));
                    return MarshalInspectable<object>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        public static unsafe void SetProperty(IObjectReference _obj, string name, object pValue)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __pValue = default;
            try
            {
                __pValue = MarshalInspectable<object>.CreateMarshaler2(pValue);
                MarshalString.Pinnable __name = new(name);
                fixed (void* ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[16](ThisPtr, MarshalString.GetAbi(ref __name), MarshalInspectable<object>.GetAbi(__pValue)));
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__pValue);
            }
        }

        public static unsafe void Invoke(IObjectReference _obj, global::Windows.UI.Core.CoreWindow window, global::Windows.Foundation.Rect rect)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __window = default;
            try
            {
                __window = global::ABI.Windows.UI.Core.CoreWindow.CreateMarshaler2(window);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Foundation.Rect, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__window), rect));
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__window);
            }
        }
        public static unsafe string get_Description(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[11](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_Id(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe bool get_IsApplicable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[10](ThisPtr, out __retval));
            return __retval != 0;
        }

        public static unsafe bool get_IsEnabled(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[9](ThisPtr, out __retval));
            return __retval != 0;
        }

        public static unsafe bool get_IsSetByGroupPolicy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[8](ThisPtr, out __retval));
            return __retval != 0;
        }

        public static unsafe bool get_IsUpdating(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out byte, int>**)ThisPtr)[12](ThisPtr, out __retval));
            return __retval != 0;
        }

        public static unsafe global::SystemSettings.DataModel.SettingType get_Type(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::SystemSettings.DataModel.SettingType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out global::SystemSettings.DataModel.SettingType, int>**)ThisPtr)[7](ThisPtr, out __retval));
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<object, string>>> _SettingChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<object, string>>> MakeSettingChangedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _SettingChanged_, new(), null);
            return _SettingChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::Windows.Foundation.TypedEventHandler<object, string>>> _SettingChanged => _SettingChanged_ ?? MakeSettingChangedTable();

        public static unsafe (Action<global::Windows.Foundation.TypedEventHandler<object, string>>, Action<global::Windows.Foundation.TypedEventHandler<object, string>>) Get_SettingChanged(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _SettingChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return
                new _EventSource_global__Windows_Foundation_TypedEventHandler_object__string_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[18],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[19],
                0);
            });
            return eventSource.EventActions;
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("40C037CC-D8BF-489E-8697-D66BAA3221BF")]
    internal unsafe interface ISettingItem : global::SystemSettings.DataModel.ISettingItem
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingItem()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingItem), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 14);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_Id_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::SystemSettings.DataModel.SettingType*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_get_Type_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_get_IsSetByGroupPolicy_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_get_IsEnabled_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_get_IsApplicable_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_get_Description_5;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[12] = &Do_Abi_get_IsUpdating_6;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[13] = &Do_Abi_GetValue_7;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[14] = &Do_Abi_SetValue_8;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[15] = &Do_Abi_GetProperty_9;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[16] = &Do_Abi_SetProperty_10;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Foundation.Rect, int>*)AbiToProjectionVftablePtr)[17] = &Do_Abi_Invoke_11;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[18] = &Do_Abi_add_SettingChanged_12;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[19] = &Do_Abi_remove_SettingChanged_13;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetValue_7(IntPtr thisPtr, IntPtr name, IntPtr* ppValue)
        {
            object __ppValue = default;

            *ppValue = default;

            try
            {
                __ppValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).GetValue(MarshalString.FromAbi(name));
                *ppValue = MarshalInspectable<object>.FromManaged(__ppValue);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetValue_8(IntPtr thisPtr, IntPtr name, IntPtr pValue)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).SetValue(MarshalString.FromAbi(name), MarshalInspectable<object>.FromAbi(pValue));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetProperty_9(IntPtr thisPtr, IntPtr name, IntPtr* ppValue)
        {
            object __ppValue = default;

            *ppValue = default;

            try
            {
                __ppValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).GetProperty(MarshalString.FromAbi(name));
                *ppValue = MarshalInspectable<object>.FromManaged(__ppValue);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetProperty_10(IntPtr thisPtr, IntPtr name, IntPtr pValue)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).SetProperty(MarshalString.FromAbi(name), MarshalInspectable<object>.FromAbi(pValue));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke_11(IntPtr thisPtr, IntPtr window, global::Windows.Foundation.Rect rect)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).Invoke(global::ABI.Windows.UI.Core.CoreWindow.FromAbi(window), rect);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Description_5(IntPtr thisPtr, IntPtr* text)
        {
            string __text = default;

            *text = default;

            try
            {
                __text = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).Description;
                *text = MarshalString.FromManaged(__text);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Id_0(IntPtr thisPtr, IntPtr* pId)
        {
            string __pId = default;

            *pId = default;

            try
            {
                __pId = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).Id;
                *pId = MarshalString.FromManaged(__pId);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsApplicable_4(IntPtr thisPtr, byte* pValue)
        {
            bool __pValue = default;

            *pValue = default;

            try
            {
                __pValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).IsApplicable;
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsEnabled_3(IntPtr thisPtr, byte* pValue)
        {
            bool __pValue = default;

            *pValue = default;

            try
            {
                __pValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).IsEnabled;
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsSetByGroupPolicy_2(IntPtr thisPtr, byte* pValue)
        {
            bool __pValue = default;

            *pValue = default;

            try
            {
                __pValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).IsSetByGroupPolicy;
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_IsUpdating_6(IntPtr thisPtr, byte* pValue)
        {
            bool __pValue = default;

            *pValue = default;

            try
            {
                __pValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).IsUpdating;
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_Type_1(IntPtr thisPtr, global::SystemSettings.DataModel.SettingType* pType)
        {
            global::SystemSettings.DataModel.SettingType __pType = default;

            *pType = default;

            try
            {
                __pType = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr).Type;
                *pType = __pType;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::SystemSettings.DataModel.ISettingItem, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<object, string>>> _SettingChanged_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::SystemSettings.DataModel.ISettingItem, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<object, string>>> MakeSettingChangedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _SettingChanged_tokenTables, new(), null);
            return _SettingChanged_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::SystemSettings.DataModel.ISettingItem, global::WinRT.EventRegistrationTokenTable<global::Windows.Foundation.TypedEventHandler<object, string>>> _SettingChanged_TokenTables => _SettingChanged_tokenTables ?? MakeSettingChangedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_SettingChanged_12(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* token)
        {
            *token = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr);
                var __handler = global::ABI.Windows.Foundation.TypedEventHandler<object, string>.FromAbi(handler);
                *token = _SettingChanged_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.SettingChanged += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_SettingChanged_13(IntPtr thisPtr, global::WinRT.EventRegistrationToken token)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem>(thisPtr);
                if (__this != null && _SettingChanged_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(token, out var __handler))
                {
                    __this.SettingChanged -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }

        unsafe object global::SystemSettings.DataModel.ISettingItem.GetValue(string name)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingItemMethods.GetValue(_obj, name);
        }

        unsafe void global::SystemSettings.DataModel.ISettingItem.SetValue(string name, object pValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingItemMethods.SetValue(_obj, name, pValue);
        }

        unsafe object global::SystemSettings.DataModel.ISettingItem.GetProperty(string name)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingItemMethods.GetProperty(_obj, name);
        }

        unsafe void global::SystemSettings.DataModel.ISettingItem.SetProperty(string name, object pValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingItemMethods.SetProperty(_obj, name, pValue);
        }

        unsafe void global::SystemSettings.DataModel.ISettingItem.Invoke(global::Windows.UI.Core.CoreWindow window, global::Windows.Foundation.Rect rect)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingItemMethods.Invoke(_obj, window, rect);
        }

        unsafe string global::SystemSettings.DataModel.ISettingItem.Description
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemMethods.get_Description(_obj);
            }
        }

        unsafe string global::SystemSettings.DataModel.ISettingItem.Id
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemMethods.get_Id(_obj);
            }
        }

        unsafe bool global::SystemSettings.DataModel.ISettingItem.IsApplicable
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemMethods.get_IsApplicable(_obj);
            }
        }

        unsafe bool global::SystemSettings.DataModel.ISettingItem.IsEnabled
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemMethods.get_IsEnabled(_obj);
            }
        }

        unsafe bool global::SystemSettings.DataModel.ISettingItem.IsSetByGroupPolicy
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemMethods.get_IsSetByGroupPolicy(_obj);
            }
        }

        unsafe bool global::SystemSettings.DataModel.ISettingItem.IsUpdating
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemMethods.get_IsUpdating(_obj);
            }
        }

        unsafe global::SystemSettings.DataModel.SettingType global::SystemSettings.DataModel.ISettingItem.Type
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemMethods.get_Type(_obj);
            }
        }

        event global::Windows.Foundation.TypedEventHandler<object, string> global::SystemSettings.DataModel.ISettingItem.SettingChanged
        {
            add
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                global::ABI.SystemSettings.DataModel.ISettingItemMethods.Get_SettingChanged(_obj, (IWinRTObject)this).Item1(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem).TypeHandle));
                global::ABI.SystemSettings.DataModel.ISettingItemMethods.Get_SettingChanged(_obj, (IWinRTObject)this).Item2(value);
            }
        }
    }

    public static class ISettingItem2Methods
    {

        public static unsafe object GetValueForUser(IObjectReference _obj, string userSid, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __userSid = new(userSid);
                MarshalString.Pinnable __name = new(name);
                fixed (void* ___userSid = __userSid, ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __userSid), MarshalString.GetAbi(ref __name), out __retval));
                    return MarshalInspectable<object>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        public static unsafe void SetValueForUser(IObjectReference _obj, string userSid, string name, object pValue)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __pValue = default;
            try
            {
                __pValue = MarshalInspectable<object>.CreateMarshaler2(pValue);
                MarshalString.Pinnable __userSid = new(userSid);
                MarshalString.Pinnable __name = new(name);
                fixed (void* ___userSid = __userSid, ___name = __name)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __userSid), MarshalString.GetAbi(ref __name), MarshalInspectable<object>.GetAbi(__pValue)));
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__pValue);
            }
        }

        public static unsafe bool GetIsEnabledForUser(IObjectReference _obj, string userSid)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            MarshalString.Pinnable __userSid = new(userSid);
            fixed (void* ___userSid = __userSid)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out byte, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __userSid), out __retval));
                return __retval != 0;
            }
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("32572999-399D-40FF-A423-3595B4DC993B")]
    internal unsafe interface ISettingItem2 : global::SystemSettings.DataModel.ISettingItem2
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingItem2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingItem2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 3);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetValueForUser_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_SetValueForUser_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_GetIsEnabledForUser_2;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetValueForUser_0(IntPtr thisPtr, IntPtr userSid, IntPtr name, IntPtr* ppValue)
        {
            object __ppValue = default;

            *ppValue = default;

            try
            {
                __ppValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem2>(thisPtr).GetValueForUser(MarshalString.FromAbi(userSid), MarshalString.FromAbi(name));
                *ppValue = MarshalInspectable<object>.FromManaged(__ppValue);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetValueForUser_1(IntPtr thisPtr, IntPtr userSid, IntPtr name, IntPtr pValue)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem2>(thisPtr).SetValueForUser(MarshalString.FromAbi(userSid), MarshalString.FromAbi(name), MarshalInspectable<object>.FromAbi(pValue));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetIsEnabledForUser_2(IntPtr thisPtr, IntPtr userSid, byte* pValue)
        {
            bool __pValue = default;

            *pValue = default;

            try
            {
                __pValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItem2>(thisPtr).GetIsEnabledForUser(MarshalString.FromAbi(userSid));
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe object global::SystemSettings.DataModel.ISettingItem2.GetValueForUser(string userSid, string name)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem2).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingItem2Methods.GetValueForUser(_obj, userSid, name);
        }

        unsafe void global::SystemSettings.DataModel.ISettingItem2.SetValueForUser(string userSid, string name, object pValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem2).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingItem2Methods.SetValueForUser(_obj, userSid, name, pValue);
        }

        unsafe bool global::SystemSettings.DataModel.ISettingItem2.GetIsEnabledForUser(string userSid)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItem2).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingItem2Methods.GetIsEnabledForUser(_obj, userSid);
        }

        object global::SystemSettings.DataModel.ISettingItem.GetValue(string name) => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).GetValue(name);

        void global::SystemSettings.DataModel.ISettingItem.SetValue(string name, object pValue) => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).SetValue(name, pValue);

        object global::SystemSettings.DataModel.ISettingItem.GetProperty(string name) => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).GetProperty(name);

        void global::SystemSettings.DataModel.ISettingItem.SetProperty(string name, object pValue) => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).SetProperty(name, pValue);

        void global::SystemSettings.DataModel.ISettingItem.Invoke(global::Windows.UI.Core.CoreWindow window, global::Windows.Foundation.Rect rect) => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).Invoke(window, rect);

        string global::SystemSettings.DataModel.ISettingItem.Description => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).Description;

        string global::SystemSettings.DataModel.ISettingItem.Id => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).Id;

        bool global::SystemSettings.DataModel.ISettingItem.IsApplicable => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).IsApplicable;

        bool global::SystemSettings.DataModel.ISettingItem.IsEnabled => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).IsEnabled;

        bool global::SystemSettings.DataModel.ISettingItem.IsSetByGroupPolicy => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).IsSetByGroupPolicy;

        bool global::SystemSettings.DataModel.ISettingItem.IsUpdating => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).IsUpdating;

        global::SystemSettings.DataModel.SettingType global::SystemSettings.DataModel.ISettingItem.Type => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).Type;

        event global::Windows.Foundation.TypedEventHandler<object, string> global::SystemSettings.DataModel.ISettingItem.SettingChanged
        {
            add => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).SettingChanged += value;
            remove => ((global::SystemSettings.DataModel.ISettingItem)(IWinRTObject)this).SettingChanged -= value;
        }
    }

    public static class ISettingItemTelemetryMethods
    {

        public static unsafe void SetPageSessionId(IObjectReference _obj, Guid pageContext)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, int>**)ThisPtr)[7](ThisPtr, pageContext));
        }
        public static unsafe Guid get_PageSessionId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out Guid, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }


    }
    [DynamicInterfaceCastableImplementation]
    [Guid("7CF1E617-FE1E-48EF-8962-40A425D21D7E")]
    internal unsafe interface ISettingItemTelemetry : global::SystemSettings.DataModel.ISettingItemTelemetry
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingItemTelemetry()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingItemTelemetry), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_PageSessionId_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, Guid, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_SetPageSessionId_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_SetPageSessionId_1(IntPtr thisPtr, Guid pageContext)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItemTelemetry>(thisPtr).SetPageSessionId(pageContext);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_PageSessionId_0(IntPtr thisPtr, Guid* pValue)
        {
            Guid __pValue = default;

            *pValue = default;

            try
            {
                __pValue = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingItemTelemetry>(thisPtr).PageSessionId;
                *pValue = __pValue;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::SystemSettings.DataModel.ISettingItemTelemetry.SetPageSessionId(Guid pageContext)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItemTelemetry).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingItemTelemetryMethods.SetPageSessionId(_obj, pageContext);
        }

        unsafe Guid global::SystemSettings.DataModel.ISettingItemTelemetry.PageSessionId
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingItemTelemetry).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingItemTelemetryMethods.get_PageSessionId(_obj);
            }
        }
    }

    public static class ISettingsAppNotificationMethods
    {

        public static unsafe void OnSettingsAppSuspending(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[6](ThisPtr));
        }

        public static unsafe void OnSettingsAppResuming(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[7](ThisPtr));
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("DFF43DDC-7D1D-4899-94C5-A2A06E177712")]
    internal unsafe interface ISettingsAppNotification : global::SystemSettings.DataModel.ISettingsAppNotification
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingsAppNotification()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingsAppNotification), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnSettingsAppSuspending_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_OnSettingsAppResuming_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnSettingsAppSuspending_0(IntPtr thisPtr)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsAppNotification>(thisPtr).OnSettingsAppSuspending();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnSettingsAppResuming_1(IntPtr thisPtr)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsAppNotification>(thisPtr).OnSettingsAppResuming();

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::SystemSettings.DataModel.ISettingsAppNotification.OnSettingsAppSuspending()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsAppNotification).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingsAppNotificationMethods.OnSettingsAppSuspending(_obj);
        }

        unsafe void global::SystemSettings.DataModel.ISettingsAppNotification.OnSettingsAppResuming()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsAppNotification).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingsAppNotificationMethods.OnSettingsAppResuming(_obj);
        }
    }

    internal static class ISettingsBrokerMethods
    {

        public static unsafe void GetSettingsDatabase(IObjectReference _obj, out object ppSettingsDatabase)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __ppSettingsDatabase = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __ppSettingsDatabase));
                ppSettingsDatabase = MarshalInspectable<object>.FromAbi(__ppSettingsDatabase);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__ppSettingsDatabase);
            }
        }

        public static unsafe void GetSystemSettingsDatabase(IObjectReference _obj, out object ppSettingsDatabase)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __ppSettingsDatabase = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, out __ppSettingsDatabase));
                ppSettingsDatabase = MarshalInspectable<object>.FromAbi(__ppSettingsDatabase);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__ppSettingsDatabase);
            }
        }

    }
    [Guid("07353932-5353-4DF4-94A3-E45D56087018")]
    internal interface ISettingsBroker : global::SystemSettings.DataModel.ISettingsBroker
    {
    }
    public static class ISettingsDatabaseMethods
    {

        public static unsafe global::SystemSettings.DataModel.ISettingItem GetSetting(IObjectReference _obj, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __id = new(id);
                fixed (void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __id), out __retval));
                    return MarshalInterface<global::SystemSettings.DataModel.ISettingItem>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::SystemSettings.DataModel.ISettingItem>.DisposeAbi(__retval);
            }
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("D68A97B7-4F47-4CB6-9E1F-A01C1232F755")]
    internal unsafe interface ISettingsDatabase : global::SystemSettings.DataModel.ISettingsDatabase
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingsDatabase()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingsDatabase), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetSetting_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSetting_0(IntPtr thisPtr, IntPtr id, IntPtr* ppSetting)
        {
            global::SystemSettings.DataModel.ISettingItem __ppSetting = default;

            *ppSetting = default;

            try
            {
                __ppSetting = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsDatabase>(thisPtr).GetSetting(MarshalString.FromAbi(id));
                *ppSetting = MarshalInterface<global::SystemSettings.DataModel.ISettingItem>.FromManaged(__ppSetting);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::SystemSettings.DataModel.ISettingItem global::SystemSettings.DataModel.ISettingsDatabase.GetSetting(string id)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsDatabase).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingsDatabaseMethods.GetSetting(_obj, id);
        }
    }

    public static class ISettingsDatabaseForUserMethods
    {

        public static unsafe global::SystemSettings.DataModel.ISettingItem GetSettingForUser(IObjectReference _obj, global::Windows.System.User user, string id)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __user = default;
            IntPtr __retval = default;
            try
            {
                __user = global::ABI.Windows.System.User.CreateMarshaler2(user);
                MarshalString.Pinnable __id = new(id);
                fixed (void* ___id = __id)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__user), MarshalString.GetAbi(ref __id), out __retval));
                    return MarshalInterface<global::SystemSettings.DataModel.ISettingItem>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__user);
                MarshalInterface<global::SystemSettings.DataModel.ISettingItem>.DisposeAbi(__retval);
            }
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("0E5C179B-5A3A-4402-AE23-C13F76CD76AD")]
    internal unsafe interface ISettingsDatabaseForUser : global::SystemSettings.DataModel.ISettingsDatabaseForUser
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingsDatabaseForUser()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingsDatabaseForUser), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetSettingForUser_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSettingForUser_0(IntPtr thisPtr, IntPtr user, IntPtr id, IntPtr* ppSetting)
        {
            global::SystemSettings.DataModel.ISettingItem __ppSetting = default;

            *ppSetting = default;

            try
            {
                __ppSetting = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsDatabaseForUser>(thisPtr).GetSettingForUser(global::ABI.Windows.System.User.FromAbi(user), MarshalString.FromAbi(id));
                *ppSetting = MarshalInterface<global::SystemSettings.DataModel.ISettingItem>.FromManaged(__ppSetting);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe global::SystemSettings.DataModel.ISettingItem global::SystemSettings.DataModel.ISettingsDatabaseForUser.GetSettingForUser(global::Windows.System.User user, string id)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsDatabaseForUser).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingsDatabaseForUserMethods.GetSettingForUser(_obj, user, id);
        }
    }

    public static class ISettingsEnvironmentDatabaseMethods
    {

        public static unsafe void IsSettingApplicable(IObjectReference _obj, string id, out bool pValue)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __pValue = default;
            MarshalString.Pinnable __id = new(id);
            fixed (void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out byte, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __id), out __pValue));
                pValue = __pValue != 0;
            }
        }

        public static unsafe void IsSettingAccessible(IObjectReference _obj, string id, out bool pValue)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __pValue = default;
            MarshalString.Pinnable __id = new(id);
            fixed (void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out byte, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __id), out __pValue));
                pValue = __pValue != 0;
            }
        }

        public static unsafe void IsSettingTextDynamic(IObjectReference _obj, string id, out bool pValue)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __pValue = default;
            MarshalString.Pinnable __id = new(id);
            fixed (void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out byte, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __id), out __pValue));
                pValue = __pValue != 0;
            }
        }

        public static unsafe void IsSettingGlyphDynamic(IObjectReference _obj, string id, out bool pValue)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __pValue = default;
            MarshalString.Pinnable __id = new(id);
            fixed (void* ___id = __id)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out byte, int>**)ThisPtr)[9](ThisPtr, MarshalString.GetAbi(ref __id), out __pValue));
                pValue = __pValue != 0;
            }
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>> _SettingsEnvironmentChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>> MakeSettingsEnvironmentChangedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _SettingsEnvironmentChanged_, new(), null);
            return _SettingsEnvironmentChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, EventSource<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>> _SettingsEnvironmentChanged => _SettingsEnvironmentChanged_ ?? MakeSettingsEnvironmentChangedTable();

        public static unsafe (Action<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>, Action<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>) Get_SettingsEnvironmentChanged(IObjectReference _obj, object _thisObj)
        {
            var eventSource = _SettingsEnvironmentChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return
                new _EventSource_global__SystemSettings_DataModel_SettingsEnvironmentChangedHandler(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out global::WinRT.EventRegistrationToken, int>**)ThisPtr)[10],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[11],
                0);
            });
            return eventSource.EventActions;
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("ACBE964B-0EED-4D11-9CA9-FDEB63598D2E")]
    internal unsafe interface ISettingsEnvironmentDatabase : global::SystemSettings.DataModel.ISettingsEnvironmentDatabase
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingsEnvironmentDatabase()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingsEnvironmentDatabase), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 6);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_IsSettingApplicable_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_IsSettingAccessible_1;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[8] = &Do_Abi_IsSettingTextDynamic_2;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, byte*, int>*)AbiToProjectionVftablePtr)[9] = &Do_Abi_IsSettingGlyphDynamic_3;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>*)AbiToProjectionVftablePtr)[10] = &Do_Abi_add_SettingsEnvironmentChanged_4;
            ((delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>*)AbiToProjectionVftablePtr)[11] = &Do_Abi_remove_SettingsEnvironmentChanged_5;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsSettingApplicable_0(IntPtr thisPtr, IntPtr id, byte* pValue)
        {

            *pValue = default;
            bool __pValue = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>(thisPtr).IsSettingApplicable(MarshalString.FromAbi(id), out __pValue);
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsSettingAccessible_1(IntPtr thisPtr, IntPtr id, byte* pValue)
        {

            *pValue = default;
            bool __pValue = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>(thisPtr).IsSettingAccessible(MarshalString.FromAbi(id), out __pValue);
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsSettingTextDynamic_2(IntPtr thisPtr, IntPtr id, byte* pValue)
        {

            *pValue = default;
            bool __pValue = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>(thisPtr).IsSettingTextDynamic(MarshalString.FromAbi(id), out __pValue);
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_IsSettingGlyphDynamic_3(IntPtr thisPtr, IntPtr id, byte* pValue)
        {

            *pValue = default;
            bool __pValue = default;

            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>(thisPtr).IsSettingGlyphDynamic(MarshalString.FromAbi(id), out __pValue);
                *pValue = (byte)(__pValue ? 1 : 0);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase, global::WinRT.EventRegistrationTokenTable<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>> _SettingsEnvironmentChanged_tokenTables;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase, global::WinRT.EventRegistrationTokenTable<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>> MakeSettingsEnvironmentChangedTable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _SettingsEnvironmentChanged_tokenTables, new(), null);
            return _SettingsEnvironmentChanged_tokenTables;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase, global::WinRT.EventRegistrationTokenTable<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>> _SettingsEnvironmentChanged_TokenTables => _SettingsEnvironmentChanged_tokenTables ?? MakeSettingsEnvironmentChangedTable();

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_add_SettingsEnvironmentChanged_4(IntPtr thisPtr, IntPtr handler, global::WinRT.EventRegistrationToken* pCookie)
        {
            *pCookie = default;
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>(thisPtr);
                var __handler = SettingsEnvironmentChangedHandler.FromAbi(handler);
                *pCookie = _SettingsEnvironmentChanged_TokenTables.GetOrCreateValue(__this).AddEventHandler(__handler);
                __this.SettingsEnvironmentChanged += __handler;
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_remove_SettingsEnvironmentChanged_5(IntPtr thisPtr, global::WinRT.EventRegistrationToken cookie)
        {
            try
            {
                var __this = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>(thisPtr);
                if (__this != null && _SettingsEnvironmentChanged_TokenTables.TryGetValue(__this, out var __table) && __table.RemoveEventHandler(cookie, out var __handler))
                {
                    __this.SettingsEnvironmentChanged -= __handler;
                }
                return 0;
            }
            catch (Exception __ex)
            {
                return __ex.HResult;
            }
        }

        unsafe void global::SystemSettings.DataModel.ISettingsEnvironmentDatabase.IsSettingApplicable(string id, out bool pValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingApplicable(_obj, id, out pValue);
        }

        unsafe void global::SystemSettings.DataModel.ISettingsEnvironmentDatabase.IsSettingAccessible(string id, out bool pValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingAccessible(_obj, id, out pValue);
        }

        unsafe void global::SystemSettings.DataModel.ISettingsEnvironmentDatabase.IsSettingTextDynamic(string id, out bool pValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingTextDynamic(_obj, id, out pValue);
        }

        unsafe void global::SystemSettings.DataModel.ISettingsEnvironmentDatabase.IsSettingGlyphDynamic(string id, out bool pValue)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).TypeHandle));
            global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.IsSettingGlyphDynamic(_obj, id, out pValue);
        }

        event global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler global::SystemSettings.DataModel.ISettingsEnvironmentDatabase.SettingsEnvironmentChanged
        {
            add
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).TypeHandle));
                global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_obj, (IWinRTObject)this).Item1(value);
            }
            remove
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).TypeHandle));
                global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseMethods.Get_SettingsEnvironmentChanged(_obj, (IWinRTObject)this).Item2(value);
            }
        }
    }

    public static class ISettingsEnvironmentDatabaseStaticsMethods
    {

        public static unsafe object GetSettingsEnvironment(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

        public static unsafe object GetSettingsEnvironmentForUser(IObjectReference _obj, global::Windows.System.User user)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __user = default;
            IntPtr __retval = default;
            try
            {
                __user = global::ABI.Windows.System.User.CreateMarshaler2(user);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__user), out __retval));
                return MarshalInspectable<object>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__user);
                MarshalInspectable<object>.DisposeAbi(__retval);
            }
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("FAEDFC6B-CB6B-4533-843C-4F394BFD66D5")]
    internal unsafe interface ISettingsEnvironmentDatabaseStatics : global::SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingsEnvironmentDatabaseStatics()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingsEnvironmentDatabaseStatics), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetSettingsEnvironment_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetSettingsEnvironmentForUser_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSettingsEnvironment_0(IntPtr thisPtr, IntPtr* ppSettingsEnvironment)
        {
            object __ppSettingsEnvironment = default;

            *ppSettingsEnvironment = default;

            try
            {
                __ppSettingsEnvironment = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics>(thisPtr).GetSettingsEnvironment();
                *ppSettingsEnvironment = MarshalInspectable<object>.FromManaged(__ppSettingsEnvironment);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetSettingsEnvironmentForUser_1(IntPtr thisPtr, IntPtr user, IntPtr* ppSettingsEnvironment)
        {
            object __ppSettingsEnvironment = default;

            *ppSettingsEnvironment = default;

            try
            {
                __ppSettingsEnvironment = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics>(thisPtr).GetSettingsEnvironmentForUser(global::ABI.Windows.System.User.FromAbi(user));
                *ppSettingsEnvironment = MarshalInspectable<object>.FromManaged(__ppSettingsEnvironment);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe object global::SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics.GetSettingsEnvironment()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseStaticsMethods.GetSettingsEnvironment(_obj);
        }

        unsafe object global::SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics.GetSettingsEnvironmentForUser(global::Windows.System.User user)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabaseStatics).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingsEnvironmentDatabaseStaticsMethods.GetSettingsEnvironmentForUser(_obj, user);
        }
    }

    internal static class ISettingsExtensibilityMethods
    {

        public static unsafe global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionApp>> GetExtensionAppsAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionApp>>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionApp>>>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Windows.Foundation.IAsyncOperation<bool> AnyInstalledCategoryAppsAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<bool>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<bool>>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionApp>> GetExtensionAppsForPageAsync(IObjectReference _obj, global::System.Collections.Generic.IEnumerable<string> pageUris)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __pageUris = default;
            IntPtr __retval = default;
            try
            {
                __pageUris = MarshalInterface<global::System.Collections.Generic.IEnumerable<string>>.CreateMarshaler2(pageUris);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__pageUris), out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionApp>>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__pageUris);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionApp>>>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Windows.Foundation.IAsyncOperation<bool> CheckIfInstalledExtensionAppsChangedAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[9](ThisPtr, out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<bool>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<bool>>.DisposeAbi(__retval);
            }
        }

        public static unsafe global::Windows.Foundation.IAsyncAction SnapshotInstalledExtensionAppsAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[10](ThisPtr, out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncAction>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncAction>.DisposeAbi(__retval);
            }
        }
        public static unsafe string get_Revision(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[11](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe void set_Revision(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed (void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[12](ThisPtr, MarshalString.GetAbi(ref __value)));
            }
        }


    }
    [Guid("3046D46B-0C7C-44D6-B7B5-1EABA8A4FDDC")]
    internal interface ISettingsExtensibility : global::SystemSettings.DataModel.ISettingsExtensibility
    {
    }
    internal static class ISettingsExtensionAppMethods
    {
        public static unsafe global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionAppLink> get_AppLinks(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[10](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionAppLink>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::SystemSettings.DataModel.SettingsExtensionAppLink>>.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_AssociatedPageUri(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_Aumid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_DisplayName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[9](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe global::System.Collections.Generic.IReadOnlyList<string> get_SearchTerms(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[11](ThisPtr, out __retval));
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<string>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<string>>.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_SettingCategory(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


    }
    [Guid("1BEB1731-DDC4-437B-B856-C0666EE19B48")]
    internal interface ISettingsExtensionApp : global::SystemSettings.DataModel.ISettingsExtensionApp
    {
    }
    internal static class ISettingsExtensionAppLinkMethods
    {

        public static unsafe void ActivateApp(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[9](ThisPtr));
        }
        public static unsafe string get_ActivationParameters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_Aumid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe string get_DisplayName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


    }
    [Guid("DDFC4C13-1DA0-48B4-AFE6-0248289227A6")]
    internal interface ISettingsExtensionAppLink : global::SystemSettings.DataModel.ISettingsExtensionAppLink
    {
    }
    internal static class ISettingsSearchContentFeatureControlMethods
    {

        public static unsafe void GetIsSearchFeatureEnabled(IObjectReference _obj, string featureId, out bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __value = default;
            MarshalString.Pinnable __featureId = new(featureId);
            fixed (void* ___featureId = __featureId)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, out byte, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __featureId), out __value));
                value = __value != 0;
            }
        }
        public static unsafe uint get_FeatureStateDigest(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out uint, int>**)ThisPtr)[7](ThisPtr, out __retval));
            return __retval;
        }

        public static unsafe uint get_FeatureStateRevision(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out uint, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }


    }
    [Guid("5B1BEE31-CD2E-47C8-A7EE-A92156147C35")]
    internal interface ISettingsSearchContentFeatureControl : global::SystemSettings.DataModel.ISettingsSearchContentFeatureControl
    {
    }
    internal static class ISettingsSearchDatabaseMethods
    {

        public static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetSearchDatabaseAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[8](ThisPtr, out __retval));
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile>>.DisposeAbi(__retval);
            }
        }

        public static unsafe string GetServiceDrivenSearchData(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[9](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe string get_DatabasePath(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[7](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        public static unsafe ulong get_DatabaseRevision(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ulong __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out ulong, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }


    }
    [Guid("5D23CF08-65BD-4DB1-9098-D45F26F11085")]
    internal interface ISettingsSearchDatabase : global::SystemSettings.DataModel.ISettingsSearchDatabase
    {
    }
    public static class ISettingsSearchDatabase2Methods
    {

        public static unsafe string GetServiceDrivenSearchNestedData(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out IntPtr, int>**)ThisPtr)[6](ThisPtr, out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("2E4F139A-9631-4E42-BF4E-C79DBCB77729")]
    internal unsafe interface ISettingsSearchDatabase2 : global::SystemSettings.DataModel.ISettingsSearchDatabase2
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingsSearchDatabase2()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingsSearchDatabase2), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_GetServiceDrivenSearchNestedData_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetServiceDrivenSearchNestedData_0(IntPtr thisPtr, IntPtr* jsonSearchData)
        {
            string __jsonSearchData = default;

            *jsonSearchData = default;

            try
            {
                __jsonSearchData = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsSearchDatabase2>(thisPtr).GetServiceDrivenSearchNestedData();
                *jsonSearchData = MarshalString.FromManaged(__jsonSearchData);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe string global::SystemSettings.DataModel.ISettingsSearchDatabase2.GetServiceDrivenSearchNestedData()
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsSearchDatabase2).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingsSearchDatabase2Methods.GetServiceDrivenSearchNestedData(_obj);
        }
    }

    public static class ISettingsSearchDatabaseExtensionMethods
    {

        public static unsafe string GetServiceDrivenSearchData(IObjectReference _obj, bool nestedProperties)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, out IntPtr, int>**)ThisPtr)[7](ThisPtr, (byte)(nestedProperties ? 1 : 0), out __retval));
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        public static unsafe ulong get_DatabaseRevision(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ulong __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, out ulong, int>**)ThisPtr)[6](ThisPtr, out __retval));
            return __retval;
        }


    }
    [DynamicInterfaceCastableImplementation]
    [Guid("FE77309C-5A00-4A55-BE49-5B919EEA47BC")]
    internal unsafe interface ISettingsSearchDatabaseExtension : global::SystemSettings.DataModel.ISettingsSearchDatabaseExtension
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe ISettingsSearchDatabaseExtension()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(ISettingsSearchDatabaseExtension), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 2);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, ulong*, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_get_DatabaseRevision_0;
            ((delegate* unmanaged[Stdcall]<IntPtr, byte, IntPtr*, int>*)AbiToProjectionVftablePtr)[7] = &Do_Abi_GetServiceDrivenSearchData_1;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_GetServiceDrivenSearchData_1(IntPtr thisPtr, byte nestedProperties, IntPtr* jsonSearchData)
        {
            string __jsonSearchData = default;

            *jsonSearchData = default;

            try
            {
                __jsonSearchData = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsSearchDatabaseExtension>(thisPtr).GetServiceDrivenSearchData(nestedProperties != 0);
                *jsonSearchData = MarshalString.FromManaged(__jsonSearchData);

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_get_DatabaseRevision_0(IntPtr thisPtr, ulong* value)
        {
            ulong __value = default;

            *value = default;

            try
            {
                __value = global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.ISettingsSearchDatabaseExtension>(thisPtr).DatabaseRevision;
                *value = __value;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe string global::SystemSettings.DataModel.ISettingsSearchDatabaseExtension.GetServiceDrivenSearchData(bool nestedProperties)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsSearchDatabaseExtension).TypeHandle));
            return global::ABI.SystemSettings.DataModel.ISettingsSearchDatabaseExtensionMethods.GetServiceDrivenSearchData(_obj, nestedProperties);
        }

        unsafe ulong global::SystemSettings.DataModel.ISettingsSearchDatabaseExtension.DatabaseRevision
        {
            get
            {
                var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.ISettingsSearchDatabaseExtension).TypeHandle));
                return global::ABI.SystemSettings.DataModel.ISettingsSearchDatabaseExtensionMethods.get_DatabaseRevision(_obj);
            }
        }
    }

    public static class IValueChangedCallbackMethods
    {

        public static unsafe void OnValueChanged(IObjectReference _obj, string name)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __name = new(name);
            fixed (void* ___name = __name)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __name)));
            }
        }

    }
    [DynamicInterfaceCastableImplementation]
    [Guid("8E25841A-9AF4-44C3-9F53-D68AC9461139")]
    internal unsafe interface IValueChangedCallback : global::SystemSettings.DataModel.IValueChangedCallback
    {

        public static IntPtr AbiToProjectionVftablePtr;
        static unsafe IValueChangedCallback()
        {
            AbiToProjectionVftablePtr = ComWrappersSupport.AllocateVtableMemory(typeof(IValueChangedCallback), sizeof(IInspectable.Vftbl) + sizeof(IntPtr) * 1);
            *(IInspectable.Vftbl*)AbiToProjectionVftablePtr = IInspectable.Vftbl.AbiToProjectionVftable;
            ((delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>*)AbiToProjectionVftablePtr)[6] = &Do_Abi_OnValueChanged_0;
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_OnValueChanged_0(IntPtr thisPtr, IntPtr name)
        {


            try
            {
                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.IValueChangedCallback>(thisPtr).OnValueChanged(MarshalString.FromAbi(name));

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }

        unsafe void global::SystemSettings.DataModel.IValueChangedCallback.OnValueChanged(string name)
        {
            var _obj = ((IObjectReference)((IWinRTObject)this).GetObjectReferenceForType(typeof(global::SystemSettings.DataModel.IValueChangedCallback).TypeHandle));
            global::ABI.SystemSettings.DataModel.IValueChangedCallbackMethods.OnValueChanged(_obj, name);
        }
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsBroker
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsBroker obj) => obj is null ? null : MarshalInspectable<global::SystemSettings.DataModel.SettingsBroker>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsBroker).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsBroker obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsBroker).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsBroker FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsBroker.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsBroker obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsBroker>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsBroker[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsBroker>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsBroker>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsBroker[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsBroker>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsBroker[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsBroker>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsBroker>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsBroker>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsDatabase
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsDatabase obj) => obj is null ? null : MarshalInterface<global::SystemSettings.DataModel.ISettingsDatabase>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsDatabase obj) => MarshalInterface<global::SystemSettings.DataModel.ISettingsDatabase>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsDatabase).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsDatabase FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsDatabase.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsDatabase obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsDatabase>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsDatabase[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsDatabase>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsDatabase>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsDatabase[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsDatabase>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsDatabase[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsDatabase>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsDatabase>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsDatabase>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsEnvironment
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsEnvironment obj) => obj is null ? null : MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsEnvironment obj) => MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsEnvironment FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsEnvironment.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsEnvironment obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironment>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsEnvironment[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironment>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironment>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsEnvironment[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironment>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsEnvironment[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironment>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironment>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironment>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    [Guid("C30DFC1C-E392-4D02-AE09-A8EBF08CBC75")]
    public static class SettingsEnvironmentChangedHandler
    {

        private static readonly global::WinRT.Interop.IDelegateVftbl AbiToProjectionVftable;
        public static readonly IntPtr AbiToProjectionVftablePtr;

        static unsafe SettingsEnvironmentChangedHandler()
        {
            AbiToProjectionVftable = new global::WinRT.Interop.IDelegateVftbl
            {
                IUnknownVftbl = global::WinRT.Interop.IUnknownVftbl.AbiToProjectionVftbl,
                Invoke = (IntPtr)(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>)&Do_Abi_Invoke
            };
            var nativeVftbl = ComWrappersSupport.AllocateVtableMemory(typeof(SettingsEnvironmentChangedHandler), Marshal.SizeOf<global::WinRT.Interop.IDelegateVftbl>());
            Marshal.StructureToPtr(AbiToProjectionVftable, nativeVftbl, false);
            AbiToProjectionVftablePtr = nativeVftbl;
        }

        public static unsafe IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler managedDelegate) =>
        managedDelegate is null ? null : MarshalDelegate.CreateMarshaler(managedDelegate, GuidGenerator.GetIID(typeof(SettingsEnvironmentChangedHandler)));

        public static unsafe ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler managedDelegate) =>
        MarshalDelegate.CreateMarshaler2(managedDelegate, GuidGenerator.GetIID(typeof(SettingsEnvironmentChangedHandler)));

        public static IntPtr GetAbi(IObjectReference value) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>.GetAbi(value);

        public static unsafe global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler FromAbi(IntPtr nativeDelegate)
        {
            return MarshalDelegate.FromAbi<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>(nativeDelegate);
        }

        public static global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler CreateRcw(IntPtr ptr)
        {
            return new global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler(new NativeDelegateWrapper(ComWrappersSupport.GetObjectReferenceForInterface<IDelegateVftbl>(ptr, GuidGenerator.GetIID(typeof(SettingsEnvironmentChangedHandler)))).Invoke);
        }

        [global::WinRT.ObjectReferenceWrapper(nameof(_nativeDelegate))]
#if !NET
        private sealed class NativeDelegateWrapper
#else
        private sealed class NativeDelegateWrapper : IWinRTObject
#endif
        {
            private readonly ObjectReference<global::WinRT.Interop.IDelegateVftbl> _nativeDelegate;

            public NativeDelegateWrapper(ObjectReference<global::WinRT.Interop.IDelegateVftbl> nativeDelegate)
            {
                _nativeDelegate = nativeDelegate;
            }

#if NET
            IObjectReference IWinRTObject.NativeObject => _nativeDelegate;
            bool IWinRTObject.HasUnwrappableNativeObject => true;
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null);
                return _queryInterfaceCache;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
            private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
            private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
            {
                global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null);
                return _additionalTypeData;
            }
            global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();
#endif

            public unsafe void Invoke(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase sender, string variableName)
            {
                IntPtr ThisPtr = _nativeDelegate.ThisPtr;
                var abiInvoke = (delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>)(_nativeDelegate.Vftbl.Invoke);
                ObjectReferenceValue __sender = default;
                try
                {
                    __sender = MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.CreateMarshaler2(sender);
                    MarshalString.Pinnable __variableName = new(variableName);
                    fixed (void* ___variableName = __variableName)
                    {
                        global::WinRT.ExceptionHelpers.ThrowExceptionForHR(abiInvoke(ThisPtr, MarshalInspectable<object>.GetAbi(__sender), MarshalString.GetAbi(ref __variableName)));
                    }
                }
                finally
                {
                    MarshalInspectable<object>.DisposeMarshaler(__sender);
                }

            }
        }

        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler managedDelegate) => CreateMarshaler2(managedDelegate).Detach();

        public static void DisposeMarshaler(IObjectReference value) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>.DisposeMarshaler(value);

        public static void DisposeAbi(IntPtr abi) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>.DisposeAbi(abi);

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvStdcall) })]
        private static unsafe int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr variableName)
        {


            try
            {

                global::WinRT.ComWrappersSupport.FindObject<global::SystemSettings.DataModel.SettingsEnvironmentChangedHandler>(thisPtr).Invoke(MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.FromAbi(sender), MarshalString.FromAbi(variableName))
                ;

            }
            catch (Exception __exception__)
            {
                global::WinRT.ExceptionHelpers.SetErrorInfo(__exception__);
                return global::WinRT.ExceptionHelpers.GetHRForException(__exception__);
            }
            return 0;
        }
    }

    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsEnvironmentDatabase
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsEnvironmentDatabase obj) => obj is null ? null : MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsEnvironmentDatabase obj) => MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsEnvironmentDatabase FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsEnvironmentDatabase.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsEnvironmentDatabase obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabase>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsEnvironmentDatabase[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabase>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabase>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsEnvironmentDatabase[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabase>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsEnvironmentDatabase[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabase>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabase>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabase>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsEnvironmentDatabaseServer
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer obj) => obj is null ? null : MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.CreateMarshaler(obj);
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer obj) => MarshalInterface<global::SystemSettings.DataModel.ISettingsEnvironmentDatabase>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsEnvironmentDatabase).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsEnvironmentDatabaseServer>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsExtensibility
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsExtensibility obj) => obj is null ? null : MarshalInspectable<global::SystemSettings.DataModel.SettingsExtensibility>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsExtensibility).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsExtensibility obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsExtensibility).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsExtensibility FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsExtensibility.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsExtensibility obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensibility>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsExtensibility[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensibility>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensibility>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsExtensibility[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensibility>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsExtensibility[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensibility>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensibility>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensibility>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsExtensionApp
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsExtensionApp obj) => obj is null ? null : MarshalInspectable<global::SystemSettings.DataModel.SettingsExtensionApp>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsExtensionApp).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsExtensionApp obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsExtensionApp).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsExtensionApp FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsExtensionApp.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsExtensionApp obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionApp>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsExtensionApp[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionApp>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionApp>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsExtensionApp[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionApp>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsExtensionApp[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionApp>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionApp>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionApp>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsExtensionAppLink
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsExtensionAppLink obj) => obj is null ? null : MarshalInspectable<global::SystemSettings.DataModel.SettingsExtensionAppLink>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsExtensionAppLink).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsExtensionAppLink obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsExtensionAppLink).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsExtensionAppLink FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsExtensionAppLink.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsExtensionAppLink obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionAppLink>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsExtensionAppLink[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionAppLink>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionAppLink>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsExtensionAppLink[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionAppLink>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsExtensionAppLink[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionAppLink>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionAppLink>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsExtensionAppLink>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct SettingsSearchContentManager
    {

        public static IObjectReference CreateMarshaler(global::SystemSettings.DataModel.SettingsSearchContentManager obj) => obj is null ? null : MarshalInspectable<global::SystemSettings.DataModel.SettingsSearchContentManager>.CreateMarshaler<IUnknownVftbl>(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsSearchContentFeatureControl).GetHelperType()));
        public static ObjectReferenceValue CreateMarshaler2(global::SystemSettings.DataModel.SettingsSearchContentManager obj) => MarshalInspectable<object>.CreateMarshaler2(obj, GuidGenerator.GetIID(typeof(global::SystemSettings.DataModel.ISettingsSearchContentFeatureControl).GetHelperType()));
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::SystemSettings.DataModel.SettingsSearchContentManager FromAbi(IntPtr thisPtr) => global::SystemSettings.DataModel.SettingsSearchContentManager.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::SystemSettings.DataModel.SettingsSearchContentManager obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsSearchContentManager>.MarshalerArray CreateMarshalerArray(global::SystemSettings.DataModel.SettingsSearchContentManager[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsSearchContentManager>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsSearchContentManager>.GetAbiArray(box);
        public static unsafe global::SystemSettings.DataModel.SettingsSearchContentManager[] FromAbiArray(object box) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsSearchContentManager>.FromAbiArray(box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::SystemSettings.DataModel.SettingsSearchContentManager[] array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsSearchContentManager>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsSearchContentManager>.MarshalerArray array) => MarshalInterfaceHelper<global::SystemSettings.DataModel.SettingsSearchContentManager>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
}
#pragma warning restore CA1416
