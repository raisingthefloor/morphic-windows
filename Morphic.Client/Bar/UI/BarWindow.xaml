<Window x:Class="Morphic.Client.Bar.UI.BarWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="clr-namespace:Morphic.Client.Bar.UI"
        xmlns:barControls="clr-namespace:Morphic.Client.Bar.UI.BarControls"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance ui:BarWindow, IsDesignTimeCreatable=True}"

        Title="{Binding Bar.Title}" Width="100" Height="100"
	SizeToContent="WidthAndHeight" 
        WindowStyle="None" ResizeMode="NoResize" 
        FlowDirection="{DynamicResource CultureFlowDirection}"
	Topmost="True" ShowInTaskbar="False"
        Background="Transparent"
        Padding="0"
        AllowsTransparency="True"
        Opacity="0"

        AutomationProperties.Name="Morphic Bar"

        >

    <Window.Resources>
        <SolidColorBrush x:Key="Background" Color="{Binding Bar.BarTheme.Background, FallbackValue=White, Mode=OneWay}"/>
        <SolidColorBrush x:Key="BorderBrush" Color="{Binding Bar.BarTheme.BorderColor, FallbackValue=Black, Mode=OneWay}"/>
        <!-- Convert a boolean to a visibility -->
        <ui:Ternary x:Key="CornerRadius" False="5" True="0" />

        <ui:Ternary x:Key="ShowCloseButton" False="Collapsed" True="Visible" />

        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Orientation}" Value="Vertical">
                    <Setter Property="Grid.Column" Value="0"/>
                    <Setter Property="Grid.Row" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Orientation}" Value="Horizontal">
                    <Setter Property="Grid.Column" Value="1"/>
                    <Setter Property="Grid.Row" Value="1"/>
                    <Setter Property="Margin" Value="-12 0 0 0" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="grid" Background="White">
                            <Border.CornerRadius>
                                <CornerRadius TopRight="5"/>
                            </Border.CornerRadius>
                            <Path x:Name="path" Data="M0,0 L10,11 M0,11 L10,0" Stroke="Gray" StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="grid" Value="#E4142C" />
                                <Setter Property="Stroke" TargetName="path" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="grid" Value="#F1707A" />
                                <Setter Property="Stroke" TargetName="path" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Remove the white bar at the top -->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="3" />
    </WindowChrome.WindowChrome>

    <Border x:Name="WindowBorder"
            CornerRadius="{Binding IsDocked, Converter={StaticResource CornerRadius}}"
            BorderBrush="{DynamicResource BorderBrush}"
            BorderThickness="{Binding Bar.BarTheme.BorderSize, FallbackValue=0, Mode=OneWay}"
            Background="{DynamicResource Background}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="{Binding CloseButtonColumnWidth}"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding HeaderRowHeight}"/>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <ui:BarControl Grid.Column="0" Grid.Row="1" x:Name="BarControl"
                               ItemsSource="{Binding BarItems}"
                               HorizontalAlignment="Left" VerticalAlignment="Top"
                               Margin="{Binding Bar.Sizes.WindowPadding}"
                               ItemSpacing="{Binding Bar.Sizes.ItemSpacing}"
                               Loaded="BarControl_Loaded"
                               PreviewKeyDown="BarWindow_OnPreviewKeyDown"
                               ToolTipService.InitialShowDelay="0"

                               FocusManager.IsFocusScope="True">

                <ui:BarControl.Resources>
                    <ui:Ternary x:Key="NullCollapsed" False="Collapsed" True="Visible" />

                    <!-- Template for bar item controls, set via code behind because it targets a base class -->
                    <!-- ReSharper disable once Xaml.RedundantResource (used in code-behind) -->
                    <Style x:Key="BarItemStyle" TargetType="{x:Type barControls:BarItemControl}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type barControls:BarItemControl}">
                                    <Grid d:DataContext="{d:DesignInstance barControls:BarItemControl, IsDesignTimeCreatable=True}">
                                        <!-- <Grid.ToolTip> -->
                                        <!--     <ToolTip -->
                                        <!--         Visibility="{Binding BarItem.ToolTip, Converter={StaticResource NullCollapsed}}"> -->
                                        <!--         <StackPanel> -->
                                        <!--             <TextBlock Text="{Binding ToolTipHeader}" -->
                                        <!--                        FontWeight="Bold"/> -->
                                        <!--             <TextBlock Text="{Binding ToolTipText}" -->
                                        <!--                        Visibility="{Binding ToolTipText, Converter={StaticResource NullCollapsed}}"/> -->
                                        <!--         </StackPanel> -->
                                        <!--     </ToolTip> -->
                                        <!-- </Grid.ToolTip> -->
                                        <Border Margin="2">
                                            <ContentPresenter />
                                        </Border>
                                    </Grid>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ui:BarControl.Resources>
            </ui:BarControl>

            <Button Style="{StaticResource CloseButtonStyle}" Click="CloseButton_Click" AutomationProperties.Name="Close" Visibility="{Binding ShowCloseButton, Converter={StaticResource ShowCloseButton}}"/>

        </Grid>
    </Border>
</Window>